#!/bin/sh

alias getopt="$(brew --prefix gnu-getopt)/bin/getopt"

##### parameters #####
workdir=$(pwd)

key=time1

##### usage #####
function usage_exit() {
cat << EOF
Usage: $(echo $(basename $0)) [option] param
  param:
  option: --key <string>: set recording file name (current: $key)
          -c|--continue : continue counting time in same key
          --start       : delete existing stopwatch and restart stopwatch
          -h|--help     : show this message

*** time data is stored in $TPMDIR/$key ***
EOF
exit 1
}
set -e

OPT=$(getopt -o c,h \
              -l key:,continue,start,help \
              -- "$@")
[ $? != 0 ] && usage_exit

eval set -- "$OPT"
while true; do
  case $1 in
    --key) key=$2; shift;;
    -c|--continue) flag_continue=1;;
    --start) flag_start=1;;
    -h|--help) usage_exit;;
    --) shift; break;;
  esac
  shift
done
shift $(( OPTIND -1 ))


##### error handling #####
recordfile=$TMPDIR/$key

if [[ -n $flag_start ]]; then
  rm -f $TMPDIR/$key
fi

##### main method #####
if [[ ! -f $recordfile ]]; then
  _start=$(date +%s)
  echo $_start > $recordfile
  echo "stop watch start @ $(date '+%Y/%m/%d %H:%M') (key: $key)"
else
  _start=$(cat $recordfile)
  _finish=$(date +%s)
  _time_spent=$(($_finish  - $_start))
  awk -v time=$_time_spent \
        'BEGIN{
        d=int(time/(24*60*60));
        time%=(24*60*60);
        h=time/(60*60);
        time%=(60*60);
        m=time/60;
        time%=60
        s=time
        printf("time spent:")
        if(d>0){printf("%2d days",d)}
        if(h>0){printf(" %02dh",h)}
        printf(" %02dm",m)
        printf(" %02ds\n",s)
        }'
  rm $recordfile
  if [[ -n $flag_continue ]]; then sh $0 --key $key; fi
fi

